box.httpd test
lua box.http.split_url('http://abc')
---
 - http
 - abc
 - nil
 - /
 - 
...
lua box.http.split_url('http://abc/')
---
 - http
 - abc
 - nil
 - /
 - 
...
lua box.http.split_url('http://abc?')
---
 - http
 - abc
 - nil
 - /
 - 
...
lua box.http.split_url('http://abc:')
---
 - http
 - abc
 - nil
 - /
 - 
...
lua box.http.split_url('http://abc:123')
---
 - http
 - abc
 - 123
 - /
 - 
...
lua box.http.split_url('http://abc:123?')
---
 - http
 - abc
 - 123
 - /
 - 
...
lua box.http.split_url('http://abc:123?query')
---
 - http
 - abc
 - 123
 - /
 - query
...
lua box.http.split_url('http://domain.subdomain.com:service?query')
---
 - http
 - domain.subdomain.com
 - service
 - /
 - query
...
lua box.http.split_url('google.com')
---
 - http
 - google.com
 - nil
 - /
 - 
...
lua box.http.split_url('google.com?query')
---
 - http
 - google.com
 - nil
 - /
 - query
...
lua box.http.split_url('google.com/abc?query')
---
 - http
 - google.com
 - nil
 - /abc
 - query
...
lua box.http.split_url('https://google.com/abc?query')
---
 - https
 - google.com
 - nil
 - /abc
 - query
...
lua box.http.split_url('https://google.com:443/abc?query')
---
 - https
 - google.com
 - 443
 - /abc
 - query
...
lua box.http.split_url('https://')
---
 - https
 - 
 - nil
 - /
 - 
...
lua box.httpd.template("<% for i = 1, cnt do %> <%= abc %> <% end %>", {abc = '1 <3>&" ', cnt = 3})
---
 -  1 &lt;3&gt;&amp;&quot;   1 &lt;3&gt;&amp;&quot;   1 &lt;3&gt;&amp;&quot;  
 - return function(_q, _i, cnt, abc)  for i = 1, cnt do  _i(" ") _q( abc ) _i(" ")  end   end
...
lua box.httpd.template("<% for i = 1, cnt do %> <%= ab %> <% end %>", {abc = '1 <3>&" ', cnt = 3})
---
 -  nil  nil  nil 
 - return function(_q, _i, cnt, abc)  for i = 1, cnt do  _i(" ") _q( ab ) _i(" ")  end   end
...
lua box.httpd.template("<% ab() %>", {ab = '1'})
---
error: 'box.httpd.template: users template:1:  attempt to call local ''ab'' (a string value)'
...
lua dump = function(...) return "'" .. box.cjson.encode(...) .. "'" end
---
...
lua dump(box.httpd.parse_request('abc'))
---
 - '{"error":"Broken request line","headers":{}}'
...
lua dump(box.httpd.parse_request("GET / HTTP/1.1\nHost: s.com\r\n\r\n"))
---
 - '{"path":"\/","method":"GET","query":"","body":"","proto":[1,1],"headers":{"host":"s.com"}}'
...
lua dump(box.httpd.parse_request("GET / HTTP/1.0\nHost: s.com\nHost: cde.com"))
---
 - '{"path":"\/","method":"GET","query":"","proto":[1,0],"headers":{"host":"s.com; cde.com"}}'
...
lua dump(box.httpd.parse_request("GET / HTTP/0.9\nX-Host: s.com\r\n\r\nbody text"))
---
 - '{"path":"\/","method":"GET","query":"","body":"body text","proto":[0,9],"headers":{"x-host":"s.com"}}'
...
lua dump(box.http.parse_response('abc'))
---
 - '{"error":"Too short response line","headers":{}}'
...
lua dump(box.http.parse_response("HTTP/1.0 200 Ok\nHost: s.com\r\n\r\n"))
---
 - '{"reason":"Ok","status":200,"body":"","proto":[1,0],"headers":{"host":"s.com"}}'
...
lua dump(box.http.parse_response("HTTP/1.0 200 Ok\nHost: s.com\r\n\r\ntext of body"))
---
 - '{"reason":"Ok","status":200,"body":"text of body","proto":[1,0],"headers":{"host":"s.com"}}'
...
lua dump(box.http.request("GET", "http://mail.ru/").status)
---
 - '200'
...
lua tonumber(box.http.request("GET", "http://mail.ru/").headers["content-length"]) > 0
---
 - true
...
lua box.http.request("GET", "http://mail.ru/").proto[1]
---
 - 1
...
lua dump(box.http.request("GET", "http://localhost:88/"))
---
 - '{"status":595,"reason":"Connection refused"}'
...
lua box.http.request("GET", "http://www.yandex.ru/?text=55,37").body:match("<(html)")
---
 - html
...
lua httpd = box.httpd.new('127.0.0.1', 12345, { templates = '../../src/plugin/httpd/test/templates' })
---
...
lua type(httpd:route({path = '/abc/:cde/:def'}, function() end))
---
 - table
...
lua type(httpd:route({path = '/abc'}, function() end))
---
 - table
...
lua type(httpd:route({path = '/abc/:cde'}, function() end))
---
 - table
...
lua type(httpd:route({path = '/abc_:cde_def'}, function() end))
---
 - table
...
lua type(httpd:route({path = '/abc-:cde-def'}, function() end))
---
 - table
...
lua type(httpd:route({path = '/aba*def'}, function() end))
---
 - table
...
lua type(httpd:route({path = '/abb*def/cde'}, function() end))
---
 - table
...
lua type(httpd:helper('helper_title', function(self, a) return 'Hello, ' .. a end))
---
 - table
...
lua httpd:match('/')
---
 - nil
...
lua dump(httpd:match('/abc').endpoint.path)
---
 - '"\/abc"'
...
lua dump(httpd:match('/abc').stash)
---
 - '{}'
...
lua dump(httpd:match('/abc/123').endpoint.path)
---
 - '"\/abc\/:cde"'
...
lua dump(httpd:match('/abc/123').stash)
---
 - '{"cde":"123"}'
...
lua dump(httpd:match('/abc/123/122').endpoint.path)
---
 - '"\/abc\/:cde\/:def"'
...
lua dump(httpd:match('/abc/123/122').stash)
---
 - '{"def":"122","cde":"123"}'
...
lua dump(httpd:match('/abc_123-122').endpoint.path)
---
 - '"\/abc_:cde_def"'
...
lua dump(httpd:match('/abc_123-122').stash)
---
 - '{"cde_def":"123-122"}'
...
lua dump(httpd:match('/abc-123-def').endpoint.path)
---
 - '"\/abc-:cde-def"'
...
lua dump(httpd:match('/abc-123-def').stash)
---
 - '{"cde":"123"}'
...
lua dump(httpd:match('/aba-123-dea/1/2/3').endpoint.path)
---
 - '"\/aba*def"'
...
lua dump(httpd:match('/aba-123-dea/1/2/3').stash)
---
 - '{"def":"-123-dea\/1\/2\/3"}'
...
lua dump(httpd:match('/abb-123-dea/1/2/3/cde').endpoint.path)
---
 - '"\/abb*def\/cde"'
...
lua dump(httpd:match('/abb-123-dea/1/2/3/cde').stash)
---
 - '{"def":"-123-dea\/1\/2\/3"}'
...
lua httpd.catfile('/')
---
 - /
...
lua httpd.catfile('/', '/')
---
 - /
...
lua httpd.catfile('/', 'abc', 'cde')
---
 - /abc/cde
...
lua httpd.catfile('abc', 'cde', 'def')
---
 - abc/cde/def
...
lua httpd.catfile('abc/', '/cde/', 'def', '/ghi')
---
 - abc/cde/def/ghi
...
lua httpd.catfile('abc', '..', 'def')
---
 - abc/../def
...
lua ep = httpd:route({ path = '/test', file = 'test.html.el' }, function(cx) cx:render({ title = 'title: 123' }) end)
---
...
lua string.match(httpd.routes[ #httpd.routes ].template, '<head>')
---
 - <head>
...
lua type(httpd:start())
---
 - table
...
lua res = box.http.request('GET', 'http://127.0.0.1:12345/test')
---
...
lua res.status == 200
---
 - true
...
lua res.reason == 'Ok'
---
 - true
...
lua string.match(res.body, 'title: 123') == 'title: 123'
---
 - true
...
lua res = box.http.request('GET', 'http://127.0.0.1:12345/test1')
---
...
lua res.status == 404
---
 - true
...
lua type(httpd:route({path = '/helper', file = 'helper.html.el'}))
---
 - table
...
lua res = box.http.request('GET', 'http://127.0.0.1:12345/helper')
---
...
lua res.status == 200
---
 - true
...
lua res.reason == 'Ok'
---
 - true
...
lua string.match(res.body, 'Hello, world') == 'Hello, world'
---
 - true
...
lua res = box.http.request('GET', 'http://127.0.0.1:12345/helper?abc')
---
...
lua res.status == 200
---
 - true
...
lua res.reason == 'Ok'
---
 - true
...
lua string.match(res.body, 'Hello, world') == 'Hello, world'
---
 - true
...
lua type(httpd:route({path = '/die', file = 'helper.html.el'}, function() error(123) end ))
---
 - table
...
lua res = box.http.request('GET', 'http://127.0.0.1:12345/die')
---
...
lua res.status == 500
---
 - true
...
lua res.reason == 'Internal server error'
---
 - true
...
lua dump(box.httpd.params())
---
 - '{}'
...
lua dump(box.httpd.params(''))
---
 - '{}'
...
lua dump(box.httpd.params('a'))
---
 - '{"a":""}'
...
lua dump(box.httpd.params('a=b'))
---
 - '{"a":"b"}'
...
lua dump(box.httpd.params('a=b&b=cde'))
---
 - '{"a":"b","b":"cde"}'
...
lua dump(box.httpd.params('a=b&b=cde&a=1'))
---
 - '{"a":["b","1"],"b":"cde"}'
...
lua dump(box.httpd.params('a=b&b=cde&a=1&a=10'))
---
 - '{"a":["b","1","10"],"b":"cde"}'
...
