# encoding: utf-8
# vim: set ft=python :


# admin("iotest()")
# admin("iotest()")
# admin("box.fiber.sleep(.5)")



admin("remote = box.net.box.new('localhost', box.cfg.primary_port, '0.5')")
admin("type(remote)")
admin("remote:ping()")
admin("remote:ping()")
admin("box.net.box.ping(remote)")
admin("box.insert(0, 123, 'test1', 'test2')")
admin("box.select(0, 0, 123)")
admin("tuple = remote:select(0, 0, 123)")
admin("remote:call('box.select', '0', '0', 123)")
admin("tuple")
admin("type(tuple)")
admin("#tuple")

admin("box.update(0, 123, '=p', 1, 'test1-updated')")
admin("remote:update(0, 123, '=p', 2, 'test2-updated')")


admin("box.insert(0, 123, 'test1', 'test2')")
admin("remote:insert(0, 123, 'test1', 'test2')")

admin("remote:insert(0, 345, 'test1', 'test2')")
admin("remote:select(0, 0, 345)")
admin("remote:call('box.select', '0', '0', 345)")
admin("box.select(0, 0, 345)")


admin("remote:replace(0, 345, 'test1-replaced', 'test2-replaced')")
admin("box.select(0, 0, 345)")
admin("remote:select_limit(0, 0, 0, 1000, 345)")

admin("box.select_range(0, 0, 1000)")
admin("remote:select_range(0, 0, 1000)")
admin("box.select(0, 0, 345)")
admin("remote:select(0, 0, 345)")
admin("remote:timeout(0.5):select(0, 0, 345)")

admin("remote:call('box.fiber.sleep', '.01')")
admin("remote:timeout(0.01):call('box.fiber.sleep', '10')")


admin("pstart = box.time()")
admin("parallel = {}")
admin("function parallel_foo(id) box.fiber.sleep(math.random() * .05) return id end")
admin("parallel_foo('abc')")
admin("for i = 1, 20 do box.fiber.resume(box.fiber.create(function() box.fiber.detach() local s = string.format('%07d', i) local so = remote:call('parallel_foo', s) table.insert(parallel, tostring(s == so[0]) ) end)) end")
admin("for i = 1, 20 do if #parallel == 20 then break end box.fiber.sleep(0.1) end")
admin("unpack(parallel)")
admin("#parallel")
admin("box.time() - pstart < 0.5")

admin("remote:close()")
admin("remote:close()")
admin("remote:ping()")

admin("box.space[0]:truncate()")

