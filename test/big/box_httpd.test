# encoding: tarantool
print('box.httpd test')

exec admin "lua box.http.split_url('http://abc')"
exec admin "lua box.http.split_url('http://abc/')"
exec admin "lua box.http.split_url('http://abc?')"
exec admin "lua box.http.split_url('http://abc:')"
exec admin "lua box.http.split_url('http://abc:123')"
exec admin "lua box.http.split_url('http://abc:123?')"
exec admin "lua box.http.split_url('http://abc:123?query')"
exec admin "lua box.http.split_url('http://domain.subdomain.com:service?query')"
exec admin "lua box.http.split_url('google.com')"
exec admin "lua box.http.split_url('google.com?query')"
exec admin "lua box.http.split_url('google.com/abc?query')"
exec admin "lua box.http.split_url('https://google.com/abc?query')"
exec admin "lua box.http.split_url('https://google.com:443/abc?query')"
exec admin "lua box.http.split_url('https://')"

exec admin "lua box.httpd.template(\"<% for i = 1, cnt do %> <%= abc %> <% end %>\", {abc = '1 <3>&\" ', cnt = 3})"
exec admin "lua box.httpd.template(\"<% for i = 1, cnt do %> <%= ab %> <% end %>\", {abc = '1 <3>&\" ', cnt = 3})"
exec admin "lua box.httpd.template(\"<% ab() %>\", {ab = '1'})"


exec admin "lua dump = function(...) return \"'\" .. box.cjson.encode(...) .. \"'\" end"

exec admin "lua dump(box.httpd.parse_request('abc'))"
exec admin 'lua dump(box.httpd.parse_request("GET / HTTP/1.1\\nHost: s.com\\r\\n\\r\\n"))'
exec admin 'lua dump(box.httpd.parse_request("GET / HTTP/1.0\\nHost: s.com\\nHost: cde.com"))'
exec admin 'lua dump(box.httpd.parse_request("GET / HTTP/0.9\\nX-Host: s.com\\r\\n\\r\\nbody text"))'


exec admin "lua dump(box.http.parse_response('abc'))"
exec admin 'lua dump(box.http.parse_response("HTTP/1.0 200 Ok\\nHost: s.com\\r\\n\\r\\n"))'
exec admin 'lua dump(box.http.parse_response("HTTP/1.0 200 Ok\\nHost: s.com\\r\\n\\r\\ntext of body"))'



exec admin 'lua dump(box.http.request("GET", "http://mail.ru/").status)'
exec admin 'lua tonumber(box.http.request("GET", "http://mail.ru/").headers["content-length"]) > 0'
exec admin 'lua box.http.request("GET", "http://mail.ru/").proto[1]'
exec admin 'lua dump(box.http.request("GET", "http://localhost:88/"))'

exec admin 'lua box.http.request("GET", "http://www.yandex.ru/?text=55,37").body:match("<(html)")'


exec admin "lua httpd = box.httpd.new('127.0.0.1', 12345, { templates = '../../src/plugin/httpd/test/templates' })"
exec admin "lua type(httpd:route({path = '/abc/:cde/:def'}, function() end))"
exec admin "lua type(httpd:route({path = '/abc'}, function() end))"
exec admin "lua type(httpd:route({path = '/abc/:cde'}, function() end))"
exec admin "lua type(httpd:route({path = '/abc_:cde_def'}, function() end))"
exec admin "lua type(httpd:route({path = '/abc-:cde-def'}, function() end))"
exec admin "lua type(httpd:route({path = '/aba*def'}, function() end))"
exec admin "lua type(httpd:route({path = '/abb*def/cde'}, function() end))"
exec admin "lua type(httpd:helper('helper_title', function(self, a) return 'Hello, ' .. a end))"

exec admin "lua httpd:match('/')"

exec admin "lua dump(httpd:match('/abc').endpoint.path)"
exec admin "lua dump(httpd:match('/abc').stash)"

exec admin "lua dump(httpd:match('/abc/123').endpoint.path)"
exec admin "lua dump(httpd:match('/abc/123').stash)"

exec admin "lua dump(httpd:match('/abc/123/122').endpoint.path)"
exec admin "lua dump(httpd:match('/abc/123/122').stash)"

exec admin "lua dump(httpd:match('/abc_123-122').endpoint.path)"
exec admin "lua dump(httpd:match('/abc_123-122').stash)"

exec admin "lua dump(httpd:match('/abc-123-def').endpoint.path)"
exec admin "lua dump(httpd:match('/abc-123-def').stash)"

exec admin "lua dump(httpd:match('/aba-123-dea/1/2/3').endpoint.path)"
exec admin "lua dump(httpd:match('/aba-123-dea/1/2/3').stash)"

exec admin "lua dump(httpd:match('/abb-123-dea/1/2/3/cde').endpoint.path)"
exec admin "lua dump(httpd:match('/abb-123-dea/1/2/3/cde').stash)"


exec admin "lua httpd.catfile('/')" 
exec admin "lua httpd.catfile('/', '/')" 
exec admin "lua httpd.catfile('/', 'abc', 'cde')" 
exec admin "lua httpd.catfile('abc', 'cde', 'def')" 
exec admin "lua httpd.catfile('abc/', '/cde/', 'def', '/ghi')" 
exec admin "lua httpd.catfile('abc', '..', 'def')" 


exec admin "lua ep = httpd:route({ path = '/test', file = 'test.html.el' }, function(cx) cx:render({ title = 'title: 123' }) end)"
exec admin "lua string.match(httpd.routes[ #httpd.routes ].template, '<head>')"

exec admin "lua type(httpd:start())"

exec admin "lua res = box.http.request('GET', 'http://127.0.0.1:12345/test')"
exec admin "lua res.status == 200"
exec admin "lua res.reason == 'Ok'"
exec admin "lua string.match(res.body, 'title: 123') == 'title: 123'"


exec admin "lua res = box.http.request('GET', 'http://127.0.0.1:12345/test1')"
exec admin "lua res.status == 404"

exec admin "lua type(httpd:route({path = '/helper', file = 'helper.html.el'}))"
exec admin "lua res = box.http.request('GET', 'http://127.0.0.1:12345/helper')"
exec admin "lua res.status == 200"
exec admin "lua res.reason == 'Ok'"
exec admin "lua string.match(res.body, 'Hello, world') == 'Hello, world'"

exec admin "lua res = box.http.request('GET', 'http://127.0.0.1:12345/helper?abc')"
exec admin "lua res.status == 200"
exec admin "lua res.reason == 'Ok'"
exec admin "lua string.match(res.body, 'Hello, world') == 'Hello, world'"

# exec admin 'lua hw = function() return 200, nil, "Hello world!\\n" end'
# exec admin "lua httpd =box.httpd.new('127.0.0.1', 8082, { handler = hw }):start()"
# exec admin "lua box.http.request('GET', 'http://127.0.0.1:8082/').status"
# exec admin "lua box.http.request('GET', 'http://127.0.0.1:8082/').body"
# exec admin "lua type(httpd:stop())"
# exec admin "lua box.fiber.sleep(.2)"
# exec admin "lua box.http.request('GET', 'http://127.0.0.1:8082/').status"
# 
# exec admin "lua type(box.httpd.new('10.255.1.50', 8080, { handler = hw }):start())"
# exec admin "lua box.fiber.sleep(1000)"

