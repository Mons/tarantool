
# A test case for Bug#1042738
# https://bugs.launchpad.net/tarantool/+bug/1042738
# Iteration over a non-unique TREE index
#
lua for i=1, 1000 do box.space[1]:truncate() for j=1, 30 do box.insert(1, j, os.time(), 1) end; index = box.space[1].index[1]; count = 0; for k,v in index.next, index, nil do count = count+1; end; if count ~= 30 then print("bug at iteration ", i, ", count is ", count) end end
---
...
lua box.space[1]:truncate()
---
...

# A test case for Bug#1043858 server crash on lua stack overflow on CentOS
# 5.4
#
lua for i = 1, 100000, 1 do box.space[1]:insert(i,i) end
---
...
lua local t1 = {box.select(1, 1)}
---
error: 'Lua error: stack overflow'
...
lua box.space[1]:truncate()
---
...
lua  function mktuple(n)     local fields = { [n] = n }     for i = 1,n do         fields[i] = i;     end     local t = box.replace(0, fields);     assert(box.unpack("i", t[0]) == 1, "tuple check")     assert(box.unpack("i", t[n-1]) == n, "tuple check")     return string.format("count %u len %u", #t, t:bsize()) end 
---
...
lua mktuple(5000)
---
 - count 5000 len 25000
...
lua mktuple(100000)
---
 - count 100000 len 500000
...
lua box.space[0]:truncate()
---
...
